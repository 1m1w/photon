From fe06d76ea408a846bf6950c458c86145811cf8de Mon Sep 17 00:00:00 2001
From: Michael Schroeder <mls@suse.de>
Date: Tue, 6 Oct 2020 13:27:28 +0200
Subject: [PATCH] Refactor solver_addchoicerules function

Split choicerule_find_installed() from the code so that
it can be reused in the next commit.
---
 src/rules.c | 109 ++++++++++++++++++++++------------------------------
 1 file changed, 47 insertions(+), 62 deletions(-)

Regenerated this patch for 0.6.35 libsolv release.
Signed-off-by: Tapas Kundu <tkundu@vmware.com>

--- a/src/rules.c	2020-11-16 15:19:02.108229180 +0530
+++ b/src/rules.c	2020-11-16 15:23:45.164716709 +0530
@@ -3016,6 +3016,48 @@ queue_removeelement(Queue *q, Id el)
     }
 }
 
+static Id
+choicerule_find_installed(Pool *pool, Id p)
+{
+  Solvable *s = pool->solvables + p;
+  Id p2, pp2;
+
+  if (!s->repo)
+    return 0;
+  if (s->repo == pool->installed)
+    return p;
+  FOR_PROVIDES(p2, pp2, s->name)
+    {
+      Solvable *s2 = pool->solvables + p2;
+      if (s2->repo != pool->installed)
+	continue;
+      if (!pool->implicitobsoleteusesprovides && s->name != s2->name)
+	continue;
+      if (pool->implicitobsoleteusescolors && !pool_colormatch(pool, s, s2))
+	continue;
+      return p2;
+    }
+  if (s->obsoletes)
+    {
+      Id obs, *obsp = s->repo->idarraydata + s->obsoletes;
+      while ((obs = *obsp++) != 0)
+	{
+	  FOR_PROVIDES(p2, pp2, obs)
+	    {
+	      Solvable *s2 = pool->solvables + p2;
+	      if (s2->repo != pool->installed)
+		continue;
+	      if (!pool->obsoleteusesprovides && !pool_match_nevr(pool, pool->solvables + p2, obs))
+		continue;
+	      if (pool->obsoleteusescolors && !pool_colormatch(pool, s, s2))
+		continue;
+	      return p2;
+	    }
+	}
+    }
+  return 0;
+}
+
 void
 solver_addchoicerules(Solver *solv)
 {
@@ -3024,9 +3066,8 @@ solver_addchoicerules(Solver *solv)
   Rule *r;
   Queue q, qi, qcheck, qcheck2;
   int i, j, rid, havechoice;
-  Id p, d, pp;
-  Id p2, pp2;
-  Solvable *s, *s2;
+  Id p, d, pp, p2;
+  Solvable *s;
   Id lastaddedp, lastaddedd;
   int lastaddedcnt;
   unsigned int now;
@@ -3078,74 +3119,20 @@ solver_addchoicerules(Solver *solv)
 	      queue_push(&q, p);
 	      continue;
 	    }
-	  /* check if this package is "blocked" by a installed package */
-	  s2 = 0;
-	  FOR_PROVIDES(p2, pp2, s->name)
-	    {
-	      s2 = pool->solvables + p2;
-	      if (s2->repo != pool->installed)
-		continue;
-	      if (!pool->implicitobsoleteusesprovides && s->name != s2->name)
-	        continue;
-	      if (pool->implicitobsoleteusescolors && !pool_colormatch(pool, s, s2))
-	        continue;
-	      break;
-	    }
+          /* find an installed package p2 that we can update/downgrade to p */
+	  p2 = choicerule_find_installed(pool, p);
+ 
 	  if (p2)
 	    {
 	      /* found installed package p2 that we can update to p */
 	      if (MAPTST(&mneg, p))
 		continue;
-	      if (policy_is_illegal(solv, s2, s, 0))
+              if (policy_is_illegal(solv, pool->solvables + p2, s, 0))
 		continue;
-#if 0
-	      if (solver_choicerulecheck(solv, p2, r, &m))
-		continue;
-	      queue_push(&qi, p2);
-#else
 	      queue_push2(&qi, p2, p);
-#endif
 	      queue_push(&q, p);
 	      continue;
 	    }
-	  if (s->obsoletes)
-	    {
-	      Id obs, *obsp = s->repo->idarraydata + s->obsoletes;
-	      s2 = 0;
-	      while ((obs = *obsp++) != 0)
-		{
-		  FOR_PROVIDES(p2, pp2, obs)
-		    {
-		      s2 = pool->solvables + p2;
-		      if (s2->repo != pool->installed)
-			continue;
-		      if (!pool->obsoleteusesprovides && !pool_match_nevr(pool, pool->solvables + p2, obs))
-			continue;
-		      if (pool->obsoleteusescolors && !pool_colormatch(pool, s, s2))
-			continue;
-		      break;
-		    }
-		  if (p2)
-		    break;
-		}
-	      if (obs)
-		{
-		  /* found installed package p2 that we can update to p */
-		  if (MAPTST(&mneg, p))
-		    continue;
-		  if (policy_is_illegal(solv, s2, s, 0))
-		    continue;
-#if 0
-		  if (solver_choicerulecheck(solv, p2, r, &m))
-		    continue;
-		  queue_push(&qi, p2);
-#else
-		  queue_push2(&qi, p2, p);
-#endif
-		  queue_push(&q, p);
-		  continue;
-		}
-	    }
 	  /* package p is independent of the installed ones */
 	  havechoice = 1;
 	}
